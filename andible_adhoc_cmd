1.ping command: 
#ansible all -i inventory.txt -m ping  
---------------------------
host_key_checking = False
---------------------------

2.know the OS
#ansible all -i invent.txt -a "uname -a"

3.know the OS starting time
#ansible all -i slaves.txt -a "uptime"

4.know the file system
#ansible all -i invent.txt -a "df -h"

5.Grouping:
#ansible greens -i slaves.txt -m ping

6.Installing appache
state:
------
install - > present / latest
uninstall --> absent 
start --> started
stop --> stoped
restart --> restarted



yum install httpd -y
service httpd start

#ansible all -i⁫ invent.txt -m yum -a "name=httpd state=present"
#ansible all -i invent.txt -m yum -a "name=httpd state=present" -b  (with permission)

start the service:
ansible all -i invent.txt -m service -a "name=httpd state=started" -b

unstalling appache
#ansible greens -i ⁫invent.txt-m yum -a "name=httpd state=absent" -b
"msg": "Failed to connect to the host via ssh: Permission denied (publickey,gssapi-keyex,gssapi-with-mic)."

7.adding user 
#ansible all -i  slaves.tx-m user -a "name=mani password=welcome1234" -b

8.copying the file
#ansible all -i ⁫invent.txt -m copy -a "src=./slave.txt dest=/tmp/slave.txt"

9.to know the port number
#ansible greens -i slave.txt -a "grep -i JENKINS_PORT /etc/sysconfig/jenkins" -b

10. to change the port number in play-book
#ansible-playbook -i slave.txt handler.yaml -e "ports=9091"

ssh -i "mumbai-08092021.pem" ec2-user@ec2-13-126-44-72.ap-south-1.compute.amazonaws.com

--------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
                                     ad hoc commands
                                     ===============
                                    
Where 
-m = Module name
-a = allow parameters
-u = username


ansible 127.0.0.1 -m file -a "dest=/opt/a.txt mode=600 state=touch" -b
ansible 127.0.0.1 -m file -a "dest=/opt/a.txt mode=600 state=touch"
ansible 127.0.0.1 -m file -a "dest=/opt/a.txt mode=600 state=touch owner=ec2-user"
ansible 127.0.0.1 -m file -a "dest=/opt/b.txt mode=755 state=touch owner=ec2-user"
ansible 127.0.0.1 -m file -a "dest=/opt/c.txt mode=755 state=touch owner=ec2-user"
ansible 127.0.0.1 -m file -a "dest=/opt/bmc.txt mode=755 owner=ec2-user"

ansible localhost -m file -a "dest=/opt/bmcdir mode=755 owner=ec2-user group=ec2-user state=directory"

ansible 127.0.0.1 -m yum -a "name=httpd state=present" -b
ansible 127.0.0.1 -m yum -a "name=httpd state=absent"

ansible all -m service -a "name=httpd state=started" -b
ansible 127.0.0.1 -m service -a "name=httpd state=stopped"

ansible 127.0.0.1 -m command -a "/bin/yum update -y"
ansible 127.0.0.1 -a "/bin/yum update -y"

ansible 127.0.0.1 -m copy -a "src=/opt/index.html dest=/var/www/html/index.html"

ansible 127.0.0.1 -m setup

# Commands used in Hands-On-Ansible Mod5 Exercise 1

# Install Apache
$ ansible webservers -i inventory -m yum -a "name=httpd state=present" -b

# Start Apache
$ ansible webservers -i inventory -m service -a "name=httpd enabled=yes state=started" -b

# Install MySQL
$ ansible dbservers -i inventory -m yum -a "name=mysql-server state=present" -b

# Start MySQL
$ ansible dbservers -i inventory -m service -a "name=mysqld enabled=yes state=started" -b

# Stop IPTables on all systems
$ ansible webservers:dbservers -i inventory -m service -a "name=iptables enabled=no state=stopped" -b

$ ansible servers -a "/sbin/reboot" 

$ ansible all -m user -a "name=foo password="

$ ansible webservers -m git -a "repo=https://foo.example.org/repo.git dest=/srv/myapp version=HEAD"

$ ansible all -m user -a "name=foo state=absent"
